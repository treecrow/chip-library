/*
 FireShot - Webpage Screenshots and Annotations
 Copyright (C) 2007-2021 Evgeny Suslikov (evgeny@suslikov.ru)
*/
var statusHostReady=0,statusError=1,fsNativePlugin={port:void 0,ready:!1,autoReconnect:!1,updating:!1,updated:!1,ignoreResponse:!1,portBusy:!1,callback:void 0,prevVersion:void 0,updateTrials:0,pendingData:"",firstPacket:!0,oldProtocol:!1,init:function(a){var d=function(b){fsNativePlugin.ignoreResponse?(getConsolePtr()("Ignored response: "+JSON.stringify(b)),"status"===b.topic&&b.code==statusError&&(fsNativePlugin.updating=!1,fsNativePlugin.autoReconnect=!1,pluginEvent(b))):(fsNativePlugin.autoReconnect=
!1,fsNativePlugin.processInternally(b)||pluginEvent(b))};this.callback=a;this.ignoreResponse=!1;this.portBusy=!0;try{this.port=chrome.runtime.connectNative(crossBrowserVars.contractId)}catch(b){logError(b.message),this.portBusy=!1}this.port.onMessage.addListener(function(b){fsNativePlugin.firstPacket&&(fsNativePlugin.firstPacket=!1,b.topic?(fsNativePlugin.oldProtocol=!0,getConsolePtr()("Old protocol detected")):getConsolePtr()("New protocol detected"));if(fsNativePlugin.oldProtocol)d(b);else if(""!==
b.data)fsNativePlugin.pendingData+=b.data;else try{var e=JSON.parse(fsNativePlugin.pendingData);isDebug&&getConsolePtr()("Original Packet: "+fsNativePlugin.pendingData.substr(0,1024));fsNativePlugin.pendingData="";d(e)}catch(c){console.log("Original Packet: "+fsNativePlugin.pendingData.substr(0,1024)),fsNativePlugin.pendingData="",logError(c.message)}});this.port.onDisconnect.addListener(function(){chrome.runtime.lastError&&getConsolePtr()(chrome.runtime.lastError.message);this.portBusy=this.ready=
!1;this.updating||this.runCallback();getConsolePtr()("Native port disconnected.");this.firstPacket=!0;this.oldProtocol=!1;this.pendingData="";this.autoReconnect&&this.doReconnect()}.bind(this));getConsolePtr()("Native port created successfully. Starting test...");this.launchJSON({JSONCommand:"ping",version:extVersionFull,id:extensionId})},runCallback:function(){void 0!==this.callback&&(this.callback(),this.callback=void 0)},processInternally:function(a){if("hostVersion"==a.topic){if(this.hostVersion=
a.data,extVersionFull!=this.hostVersion)if(3<++this.updateTrials)getConsolePtr()("Too much of unsuccessful update trials. No updates anymore."),gaTrack("UA-1025658-9","fireshot.com","NativeError-Too much of unsuccessful update trials. No updates anymore"),this.updating=!1;else return this.prevVersion=this.hostVersion,this.doUpdate(),!0}else if("status"==a.topic)a.code==statusHostReady?(a=a.data,this.updateTrials=0,this.ready=!0,this.runCallback(),this.updating&&(this.updated=!0,this.updating=!1,"0"!=
this.prevVersion&&nativeHostUpdated(a))):this.updating&&(this.updating=!1);else if("getDLL"==a.topic)return this.sendDLL(),!0;return!1},launchJSON:function(a){this.port.postMessage(a)},getFile:function(a,d){getConsolePtr()("Fetching: "+a);fetch(chrome.extension.getURL(a)).then(function(b){200==b.status?b.blob().then(function(e){var c=new FileReader;c.onload=function(f){getConsolePtr()("Fetching complete");d(btoa(f.target.result))};c.onerror=function(f){gaTrack("UA-1025658-9","fireshot.com","NativeError-Error decoding SSS.dll in FileReader")};
c.readAsBinaryString(e)}):(getConsolePtr()("NativeError-Error retrieving file"),gaTrack("UA-1025658-9","fireshot.com","NativeError-Error retrieving "+a+": "+b.status))}).catch(function(b){gaTrack("UA-1025658-9","fireshot.com","NativeError-Error retrieving "+a+": "+b)})},sendDLL:function(){this.getFile("native/sss.dat",function(a){this.launchJSON({JSONCommand:"updateDLL",version:extVersionFull,data:a})}.bind(this))},doUpdate:function(){getConsolePtr()("Updating native to the version: "+extVersionFull);
this.ignoreResponse=!0;this.getFile("native/"+crossBrowserVars.nativeFilePath,function(a){this.autoReconnect=this.updating=!0;this.launchJSON({JSONCommand:"updateNative",version:extVersionFull,data:a})}.bind(this))},doReconnect:function(){setTimeout(function(){getConsolePtr()("Trying to reconnect...");this.init(this.callback)}.bind(this),1E3)},forceDisconnect:function(){this.autoReconnect=!1;this.port&&this.port.disconnect();this.ready=!1}};
